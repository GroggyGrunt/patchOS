#!/bin/sh

if [[ $(uname) == 'Linux' ]]; then
	if [[ -z $(lscpu | grep 'Cortex-A72') ]]; then
		echo "This script must be run on a Raspberry PI 4"
		exit 1
	fi
elif [[ $(uname) == 'Darwin' ]]; then
	echo "This script must be run on a Raspberry PI 4"
	exit 1
fi

# Create "patch" user
useradd -m -G audio,realtime patch
echo patch:patch | chpasswd

# Enter "patch" home folder (for later downloads and easier cleanup)
cd /home/patch

# Remove "alarm" user
userdel -r -f alarm

# Set hostname
echo "patchos" > /etc/hostname

# Initialize pacman
pacman-key --init
pacman-key --populate archlinuxarm

# System update
pacman -Syu --noconfirm

# Install packages
pacman -S --noconfirm \
	base-devel \
	git \
	realtime-privileges \
	libffado \
	rtaudio \
	qt5-base \
	celt \
	opus \
	libsamplerate \
	portaudio \
	waf

# Build jack2 from source without d-bus (Taken from jack2-git AUR PKGBUILD)
git clone https://github.com/jackaudio/jack2.git
cd jack2
touch __init__.py
mkdir -vp tools
cp -v waflib/extras/xcode*.py tools
mv -v autooptions/__init__.py tools/autooptions.py
rm -rv waflib
sed -e "s/load('xcode'/load('xcode', tooldir='tools'/g" \
	-e "s/load('xcode6'/load('xcode6', tooldir='tools'/g" \
	-e "s/load('autooptions'/load('autooptions', tooldir='tools'/g" \
	-i wscript

# Build jacktrip from source
git clone https://github.com/jacktrip/jacktrip.git
cd jacktrip/src
./build
make install
cd /home/patch

# Get patchOS repository
su patch -c "git clone https://github.com/elektrofon/patchOS.git"
cd jackOS/jack
su patch -c "makepkg -sA --skipchecksums --noconfirm"
pacman -U *armv7h.pkg.tar.xz --noconfirm

# Install jack service
cp patchOS/jack/jack@.service /etc/systemd/system/jack@.service
chmod 644 /etc/systemd/system/jack@.service
mkdir -p .config/jack
cp patchOS/jack/jack.conf .config/jack/jack.conf
systemctl enable jack@jack

# Configure jack service to start/stop on ES-8 connect/disconnect
cp patchOS/es8/es8.rules /etc/udev/rules.d/es8.rules

# Cleanup
rm -Rf jack2 jacktrip jackOS
pacman -Rsu git base-devel --noconfirm
